buildscript {
    repositories {
        jcenter()
        /*maven { url 'https://bintray.com/cbeust/maven/jcommander' }*/
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.51'
    id "org.sonarqube" version "2.6.2"
    id "jacoco"
    id "io.gitlab.arturbosch.detekt" version "1.0.0-RC14"
}


repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    /*maven { url 'https://dl.bintray.com/kotlin/exposed' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }*/
    maven { url 'https://bintray.com/cbeust/maven/jcommander' }
}

group 'com.psl'
version '1.0-SNAPSHOT'

jacoco {
    toolVersion = "0.8.2"
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    // https://mvnrepository.com/artifact/com.beust/jcommander
    compile group: 'com.beust', name: 'jcommander', version: '1.74'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

allprojects {
    apply from: "$rootDir/detekt.gradle"
}

sonarqube {

    properties {

        property "sonar.host.url", "http://10.80.66.3:9000" //  url is your sonar server
        /*property "sonar.project.BaseDir", "./src/main/kotlin"*/
        property "sonar.projectName", "Jacoco_Sonar"   //  this name will appear in dashboard
        property "sonar.projectKey", "Jacoco_Sonar" // It sould be a keybased on this report is created
        property "sonar.projectVersion", "1.0"
        property "sonar.sources", "src/main"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.java.binaries", "build/classes/kotlin"
        property "sonar.tests", "src/test"
        property "detekt.sonar.kotlin.config.path", "$rootDir/default-detekt-config.yml"
       /* property "sonar.report.export.path", "sonar-report.json"*/
        property "sonar.binaries", "build/classes/kotlin"
       /* property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.jacoco.reportPaths", "build/jacoco/testDebugUnitTest.exec"*/

        // Test coverage
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacocoTestReport.xml" //link to xml file that generated by jacoco
    }

}



jacocoTestReport{ //we use "debug" build type for test coverage (can be other)
   /* dependsOn "testDebugUnitTest"*/
    group = "reporting"
    description = "Generate unified Jacoco code coverage report"

    reports {
        xml.enabled = true
        html.enabled = true
        csv.enabled = false
        html.destination file("${buildDir}/jacocoHtml")
        //xml.destination = file("${buildDir}/reports/jacocoTestReport.xml")
    }
}


clean {
    delete = ['build/libs', 'build/tmp']
}